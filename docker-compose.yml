services:
  mongo:
    image: mongo
    volumes:
      - mongodata:/app
    restart: always
    ports:
      - "1234:27017"
    expose:
      - 1234
    environment:
      MONGO_INITDB_ROOT_USERNAME:
      MONGO_INITDB_ROOT_PASSWORD:
    networks:
      main:
        ipv4_address: 192.168.1.71
  backcalendar:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 3002
    ports:
      - "3002:3002"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/back/calendar
        npm run start:dev
    depends_on:
      - mongo
    networks:
      main:
        ipv4_address: 192.168.1.72
  backmatches:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 3003
    ports:
      - "3003:3003"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/back/matches
        npm run start:dev
    depends_on:
      - mongo
    networks:
      main:
        ipv4_address: 192.168.1.73
  backplayers:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 3000
    ports:
      - "3000:3000"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/back/players
        npm run start:dev
    depends_on:
      - mongo
    networks:
      main:
        ipv4_address: 192.168.1.74
  backsocket:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 3004
    ports:
      - "3004:3004"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/back/socket
        npm run start:dev
    depends_on:
      - mongo
    networks:
      main:
        ipv4_address: 192.168.1.75
  backtournaments:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 3001
    ports:
      - "3001:3001"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/back/tournaments
        npm run start:dev
    depends_on:
      - mongo
    networks:
      main:
        ipv4_address: 192.168.1.76
  frontbackoffice:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 2003
    ports:
      - "2003:2003"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/front/backoffice
        npm run start:dev
    networks:
      main:
        ipv4_address: 192.168.1.77
  fronthome:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 2001
    ports:
      - "2001:2001"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/front/home
        npm run start:dev
    networks:
      main:
        ipv4_address: 192.168.1.78
  frontmain:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 2000
    ports:
      - "2000:2000"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/front/main
        npm run start:dev
    networks:
      main:
        ipv4_address: 192.168.1.79
  frontmatchscore:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 2004
    ports:
      - "2004:2004"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/front/matchScore
        npm run start:dev
    networks:
      main:
        ipv4_address: 192.168.1.80
  fronttournament:
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - 2002
    ports:
      - "2002:2002"
    command: 
      - /bin/sh
      - -c
      - |
        cd /app/front/tournament
        npm run start:dev
    networks:
      main:
        ipv4_address: 192.168.1.81

volumes:
  mongodata:

networks:
  main:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          ip_range: "192.168.1.71/32"
          gateway: "192.168.1.1"